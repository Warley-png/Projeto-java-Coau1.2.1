
package br.com.coau.telas;

import br.com.coau.persistence.JPAUtil;
import br.com.coau.persistence.Livros;
import br.com.coau.persistence.LivrosDAO;
import br.com.coau.persistence.LivrosIMPL;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Warley
 */
public class TelaListaLivros extends javax.swing.JInternalFrame {

    LivrosDAO livro = new LivrosIMPL(JPAUtil.getEntityManager());

    public TelaListaLivros() {
        initComponents();
        listaLivros();
        atualizarTabela();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAlugar = new javax.swing.JButton();
        btnListaAlugados = new javax.swing.JButton();
        btnDevolver = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLivros = new javax.swing.JTable();
        txtPesquisa = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        btnAlugar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/Alugar.png"))); // NOI18N
        btnAlugar.setToolTipText("Alugar Livro");
        btnAlugar.setPreferredSize(new java.awt.Dimension(80, 80));
        btnAlugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlugarActionPerformed(evt);
            }
        });

        btnListaAlugados.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/maximize_lista de alugados.png"))); // NOI18N
        btnListaAlugados.setToolTipText("Lista Livros Alugados");
        btnListaAlugados.setPreferredSize(new java.awt.Dimension(80, 80));

        btnDevolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/Devolver.png"))); // NOI18N
        btnDevolver.setToolTipText("Devolver Livro");
        btnDevolver.setPreferredSize(new java.awt.Dimension(80, 80));

        setBackground(new java.awt.Color(204, 255, 204));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Livros Coau");
        setPreferredSize(new java.awt.Dimension(650, 500));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Livros Coau");

        tblLivros = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;

            }
        };
        tblLivros.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 0, 255), null));
        tblLivros.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblLivros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Título", "Autor", "Editora", "Assunto", "Prateleira", "Tipo"
            }
        ));
        tblLivros.setFocusable(false);
        tblLivros.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblLivros);

        txtPesquisa.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtPesquisa.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtPesquisaCaretUpdate(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/pesquisa1.png"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 0, 0));
        jLabel3.setText("Pesquisa por nome de prateleira");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(261, 261, 261)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(110, 110, 110)))
                                .addComponent(jLabel2))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 577, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        setBounds(0, 0, 650, 500);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAlugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlugarActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_btnAlugarActionPerformed

    private void txtPesquisaCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtPesquisaCaretUpdate
        //Chamando método pesquisar por prateleira
        pesquisarLivro();

    }//GEN-LAST:event_txtPesquisaCaretUpdate


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlugar;
    private javax.swing.JButton btnDevolver;
    private javax.swing.JButton btnListaAlugados;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable tblLivros;
    private javax.swing.JTextField txtPesquisa;
    // End of variables declaration//GEN-END:variables

   private void listaLivros() {
        List<Livros> listar = livro.listarLivros();
        DefaultTableModel tabela = (DefaultTableModel) tblLivros.getModel();
        tabela.setRowCount(0);
        if (listar != null) {
            for (Livros l : listar) {
                tabela.addRow(new Object[]{
                    l.getIdliv(),
                    l.getNomeliv(),
                    l.getAutorliv(),
                    l.getEditoraliv(),
                    l.getAssuntoliv(),
                    l.getPrateleiraliv(),
                    l.getTipo(),});
            }
        } else {
            JOptionPane.showMessageDialog(this, "Nenhum Livro encontrado !");
        }
    }

    void atualizarTabela() {
        listaLivros();
    }

    private void pesquisarLivro() {
        String nome = txtPesquisa.getText().trim();
        LivrosDAO livro = new LivrosIMPL(JPAUtil.getEntityManager());
        // Está condição verificar se o nome da prateleira existe 
        if (!livro.prateleiracad(nome)) {
            System.out.println("A prateleira '" + nome + "' não existe.");
            JOptionPane.showMessageDialog(this, "A prateleira '" + nome + "' não existe.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        List<Livros> livros = livro.pesquisarlivros(nome);
        DefaultTableModel tabela = (DefaultTableModel) tblLivros.getModel();
        tabela.setRowCount(0);

        if (livros != null && !livros.isEmpty()) {
            for (Livros l : livros) {
                tabela.addRow(new Object[]{
                    l.getIdliv(),
                    l.getNomeliv(),
                    l.getAutorliv(),
                    l.getEditoraliv(),
                    l.getAssuntoliv(),
                    l.getPrateleiraliv(),
                    l.getTipo(),});
            }
        } else {
            System.out.println("Nenhum Livro encontrado para esta prateleira!");
        }
    }

}